version: '3.8'
services:
  postgres:
    image: postgres:15
    container_name: well-better-postgres-db
    environment:
      POSTGRES_DB: well-better
      POSTGRES_USER: well_better_db_user
      POSTGRES_PASSWORD: testingPassword
    ports:
      - "5432:5432"
    networks:
      - mynetwork
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "well_better_db_user"]
      interval: 10s
      timeout: 5s
      retries: 5

  spring-app:
    build:
      context: ./well-better-backend
      dockerfile: Dockerfile
    image: openjdk:17
    container_name: well-better-spring-app
    ports:
      - "8080:8080"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/well-better-db
      - SPRING_DATASOURCE_USERNAME=well_better_db_user
      - SPRING_DATASOURCE_PASSWORD=testingPassword
    depends_on:
      - postgres
    volumes:
      - ./spring-app:/app
    command: ["java", "-jar", "/app/target/spring-app.jar"]
    networks:
      - mynetwork

  angular-app:
    build:
      context: ./well-better-frontend
      dockerfile: Dockerfile
    image: node:23
    container_name: well-better-angular-app
    ports:
      - "4200:4200"
    depends_on:
      - spring-app
    volumes:
      - ./well-better-angular-app:/app
    working_dir: /app
    command: ["npm", "start"]
    networks:
      - mynetwork

networks:
  mynetwork:
    driver: bridge

volumes:
  postgres-data:
